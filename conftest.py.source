import os
import glob
import pytest
from functools import partial
from fnmatch import fnmatch


def pytest_addoption(parser):
    parser.addini("tests_type", help="Typo of the tests being run", default='unit')


KNOWN_ISSUES_INTEGRATION = {
    'ignore_list': {
        'common': [
            'integration/files/file/base/*',           # should no be included
            'integration/utils/test_reactor.py',       # not yet implemented
            '*::SaltnadoTestCase::*',                  # these are not actual tests
            'integration/cloud/providers/msazure.py',
            'integration/modules/git.py'
        ],
    },
    'xfail_list': {
        'products-next': [],
        'testing': [],
        'rhel6/products': [],
        'rhel7/products': [],
        'products-next':[
            'integration/fileserver/roots_test.py::RootsTest::test_symlink_list',
            'integration/modules/cp.py::CPModuleTest::test_push',
            'integration/modules/pillar.py::PillarModuleTest::test_pillar_items',
            'integration/shell/call.py::CallTest::test_issue_2731_masterless',
            'integration/shell/key.py::KeyTest::test_keys_generation_no_configdir',
        ],
        'rhel6/products-next': [
            'integration/cli/grains.py::GrainsTargetingTest::test_grains_targeting_disconnected',
            'integration/shell/call.py::CallTest::test_issue_6973_state_highstate_exit_code',
            'integration/shell/matcher.py::MatchTest::test_salt_documentation_arguments_not_assumed',
            'integration/shell/master_tops.py::MasterTopsTest::test_custom_tops_gets_utilized',
        ],
        'rhel7/products-next': [
            'integration/shell/matcher.py::MatchTest::test_salt_documentation_arguments_not_assumed',
        ],
        'sles11sp3/products-next': [],
        'sles11sp4/products-next': [],
        'sles12/products-next': [
            'integration/cli/grains.py::GrainsTargetingTest::test_grains_targeting_disconnected',
            'integration/modules/pkg.py::PkgModuleTest::test_pkg_info',
            'integration/output/output.py::OutputReturnTest::test_output_yaml',
            'integration/shell/call.py::CallTest::test_issue_14979_output_file_permissions',
            'integration/shell/call.py::CallTest::test_issue_15074_output_file_append',
            'integration/shell/master_tops.py::MasterTopsTest::test_custom_tops_gets_utilized',
            'integration/shell/matcher.py::MatchTest::test_grain',
            'integration/shell/matcher.py::MatchTest::test_salt_documentation_arguments_not_assumed',
        ],
        'sles12sp1/products-next': [
            'integration/modules/pkg.py::PkgModuleTest::test_pkg_info',
            'integration/shell/matcher.py::MatchTest::test_salt_documentation_arguments_not_assumed',
        ],
        'sles12sp2/products-next': [
            'integration/modules/pkg.py::PkgModuleTest::test_pkg_info',
            'integration/shell/matcher.py::MatchTest::test_grain',
            'integration/shell/matcher.py::MatchTest::test_salt_documentation_arguments_not_assumed',
            'integration/shell/call.py::CallTest::test_issue_14979_output_file_permissions',
            'integration/shell/call.py::CallTest::test_issue_6973_state_highstate_exit_code',
        ],
    }
}


KNOWN_ISSUES_UNIT = {
    'ignore_list': {
        'common': [
            'unit/zypp_plugins_test.py', # BogusIO missing in zypp_plugin
            'unit/netapi/rest_tornado/test_handlers.py',
            'unit/returners/smtp_return_test.py',
            'unit/transport/zeromq_test.py',  # Prevent pytests hang after tests
            'unit/conf_test.py::ConfTest::test_conf_master_sample_is_commented', # we have uncommented custom config
            'unit/conf_test.py::ConfTest::test_conf_minion_sample_is_commented', # we have uncommented custom config
            'unit/conf_test.py::ConfTest::test_conf_proxy_sample_is_commented', # we have uncommented custom config
            '*rsync_test.py::*',

            # failing on 2015.8.12
            'unit/modules/darwin_sysctl_test.py',
        ],
    },
    'xfail_list': {
        'rhel6/products': [
            'unit/states/pip_test.py::PipStateTest::test_install_requirements_parsing',
        ],
        'products-next': [
            # # failing in jenkins + sles12 sles12sp1
            # 'unit/netapi/rest_tornado/test_utils.py::TestEventListener::test_simple',
            # 'unit/netapi/rest_tornado/test_utils.py::TestEventListener::test_timeout',

            # # failing in jenkins + sles12
            # 'unit/netapi/rest_tornado/test_utils.py::TestEventListener::test_set_event_handler',

            # # failing in jenkins + rhel6
            # 'unit/utils/event_test.py::TestSaltEvent::test_event_matching_all',

            'unit/config_test.py::ConfigTestCase::test_get_id_etc_hostname',
            'unit/config_test.py::ConfigTestCase::test_get_id_etc_hosts',
            'unit/config_test.py::ConfigTestCase::test_issue_6714_parsing_errors_logged',
            # https://github.com/saltstack/salt/pull/36325 but not yet in our package
            'unit/modules/blockdev_test.py::TestBlockdevModule::test_resize2fs',
            # not working in docker containers
            'unit/modules/cmdmod_test.py::CMDMODTestCase::test_run',
            'unit/modules/zypper_test.py::ZypperTestCase::test_repo_noadd_nomod_noref',
            'unit/states/winrepo_test.py::WinrepoTestCase::test_genrepo',
            'unit/transport/tcp_test.py::BaseTCPReqCase::runTest',
            'unit/utils/network.py::NetworkTestCase::test_interfaces_ifconfig_solaris',
        ],
        'rhel6/products-next': [],
        'rhel7/products-next': [
            'unit/netapi/rest_tornado/test_utils.py::TestEventListener::test_simple',
        ],
        'sles11sp3/products-next': [],
        'sles11sp4/products-next': [
            'unit/netapi/rest_tornado/test_utils.py::TestEventListener::test_set_event_handler',
        ],
        'rhel7/products': [
            'unit/states/pip_test.py::PipStateTest::test_install_requirements_parsing',
        ]
    }
}


KNOWN_ISSUES = {
    'integration': KNOWN_ISSUES_INTEGRATION,
    'unit': KNOWN_ISSUES_UNIT
}


def get_list(tests_type, name):
    version = os.environ.get('VERSION')
    flavor = os.environ.get('FLAVOR')
    assert name in ['ignore_list', 'xfail_list']
    return (
        (KNOWN_ISSUES[tests_type][name].get('common') or []) +
        (KNOWN_ISSUES[tests_type][name].get(flavor) or []) +
        (KNOWN_ISSUES[tests_type][name].get(version) or []) +
        (KNOWN_ISSUES[tests_type][name].get('{0}/{1}'.format(version, flavor)) or [])
    )


def pytest_ignore_collect(path, config):
    return any(map(path.fnmatch, get_list(config.getini('tests_type'), 'ignore_list')))


def pytest_itemcollected(item):
    xfail_list = get_list(item.config.getini('tests_type'), 'xfail_list')
    ignore_list = get_list(item.config.getini('tests_type'), 'ignore_list')

    matcher = partial(fnmatch, item.nodeid)
    if any(map(matcher, xfail_list)):
        item.addExpectedFailure(item.parent, None)
    elif any(map(matcher, ignore_list)):
        item.addSkip(item.parent, None)


def pytest_configure(config):
    os.sys.path.extend(glob.glob(os.environ.get('SALT_TESTS')))


@pytest.fixture(scope="session")
def test_daemon(add_options, request):
    from integration import TestDaemon
    return TestDaemon(request.instance)


@pytest.fixture(scope="session")
def transplant_configs(test_daemon):
    test_daemon.transplant_configs(transport='zeromq')


@pytest.fixture(scope="session")
def add_options(request):
    from tests.runtests import SaltTestsuiteParser
    parser = SaltTestsuiteParser([])
    request.instance.options, args = parser.parse_args([])


@pytest.fixture(scope="session")
def salt_test_daemon(transplant_configs, test_daemon, request):
    finalizer = partial(test_daemon.__exit__, None, None, None)
    request.addfinalizer(finalizer)
    test_daemon.__enter__()
